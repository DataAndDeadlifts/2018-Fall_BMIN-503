data.case <- filter(data, status=='Case')
data.control <- filter(data, status=='Control')
#data_cols <- colnames(data)
#class(data.case)
#class(data.case)
for (i in c(2:ncol(data))) {
#print(i)
t_res = t.test(data.case[, i], data.control[, i])
print(t_res["p.value"])
#t_result <- t.test(x1, x2)
#print(t_result)
}
data.case <- filter(data, status=='Case')
data.control <- filter(data, status=='Control')
#data_cols <- colnames(data)
#class(data.case)
#class(data.case)
for (i in c(2:ncol(data))) {
#print(i)
t_res = t.test(data.case[, i], data.control[, i])
p_val = t_res["p.value"]
if (p_val <= 0.05) {
col_name = colnames(data)[i]
}
print(t_res["p.value"])
#t_result <- t.test(x1, x2)
#print(t_result)
}
data.case <- filter(data, status=='Case')
data.control <- filter(data, status=='Control')
#data_cols <- colnames(data)
#class(data.case)
#class(data.case)
for (i in c(2:ncol(data))) {
#print(i)
t_res = t.test(data.case[, i], data.control[, i])
p_val = t_res["p.value"]
if (p_val <= 0.05) {
col_name = colnames(data)[i]
print(col_name)
}
#print(t_res["p.value"])
#t_result <- t.test(x1, x2)
#print(t_result)
}
data.case <- filter(data, status=='Case')
data.control <- filter(data, status=='Control')
#data_cols <- colnames(data)
#class(data.case)
#class(data.case)
for (i in c(2:ncol(data))) {
#print(i)
t_res = t.test(data.case[, i], data.control[, i])
p_val = t_res["p.value"]
if (p_val <= 0.05) {
print(colnames(data)[i],p_val)
}
#print(t_res["p.value"])
#t_result <- t.test(x1, x2)
#print(t_result)
}
data.case <- filter(data, status=='Case')
data.control <- filter(data, status=='Control')
#data_cols <- colnames(data)
#class(data.case)
#class(data.case)
for (i in c(2:ncol(data))) {
#print(i)
t_res = t.test(data.case[, i], data.control[, i])
p_val = t_res["p.value"]
if (p_val <= 0.05) {
print(colnames(data)[i])
print(p_val)
}
#print(t_res["p.value"])
#t_result <- t.test(x1, x2)
#print(t_result)
}
data.case <- filter(data, status=='Case')
data.control <- filter(data, status=='Control')
#data_cols <- colnames(data)
#class(data.case)
#class(data.case)
col_p <- list()
for (i in c(2:ncol(data))) {
#print(i)
t_res = t.test(data.case[, i], data.control[, i])
p_val = t_res["p.value"]
if (p_val <= 0.05) {
col_p <- new_element([colnames(data)[i],p_val])
data.case <- filter(data, status=='Case')
data.control <- filter(data, status=='Control')
#data_cols <- colnames(data)
#class(data.case)
#class(data.case)
col_p <- list()
for (i in c(2:ncol(data))) {
#print(i)
t_res = t.test(data.case[, i], data.control[, i])
p_val = t_res["p.value"]
if (p_val <= 0.05) {
col_p <- new_element([colnames(data)[i],p_val)
data.case <- filter(data, status=='Case')
data.control <- filter(data, status=='Control')
#data_cols <- colnames(data)
#class(data.case)
#class(data.case)
col_p <- list()
for (i in c(2:ncol(data))) {
#print(i)
t_res = t.test(data.case[, i], data.control[, i])
p_val = t_res["p.value"]
if (p_val <= 0.05) {
col_p <- new_element(c(colnames(data)[i],p_val))
}
#print(t_res["p.value"])
#t_result <- t.test(x1, x2)
#print(t_result)
}
data.case <- filter(data, status=='Case')
data.control <- filter(data, status=='Control')
#data_cols <- colnames(data)
#class(data.case)
#class(data.case)
col_p <- list()
for (i in c(2:ncol(data))) {
#print(i)
t_res = t.test(data.case[, i], data.control[, i])
p_val = t_res["p.value"]
if (p_val <= 0.05) {
col_p <- new_element(c(colnames(data)[i],p_val))
}
#print(t_res["p.value"])
#t_result <- t.test(x1, x2)
#print(t_result)
}
data.case <- filter(data, status=='Case')
data.control <- filter(data, status=='Control')
#data_cols <- colnames(data)
#class(data.case)
#class(data.case)
col_p <- list()
for (i in c(2:ncol(data))) {
#print(i)
t_res = t.test(data.case[, i], data.control[, i])
p_val = t_res["p.value"]
if (p_val <= 0.05) {
col_p.append(c(colnames(data)[i],p_val))
}
#print(t_res["p.value"])
#t_result <- t.test(x1, x2)
#print(t_result)
}
data.case <- filter(data, status=='Case')
data.control <- filter(data, status=='Control')
#data_cols <- colnames(data)
#class(data.case)
#class(data.case)
col_p <- list()
for (i in c(2:ncol(data))) {
#print(i)
t_res = t.test(data.case[, i], data.control[, i])
p_val = t_res["p.value"]
if (p_val <= 0.05) {
list.append(col_p,c(colnames(data)[i],p_val))
}
#print(t_res["p.value"])
#t_result <- t.test(x1, x2)
#print(t_result)
}
data.case <- filter(data, status=='Case')
data.control <- filter(data, status=='Control')
#data_cols <- colnames(data)
#class(data.case)
#class(data.case)
col_p <- list()
for (i in c(2:ncol(data))) {
#print(i)
t_res = t.test(data.case[, i], data.control[, i])
p_val = t_res["p.value"]
if (p_val <= 0.05) {
col_p[[colnames(data)[i]]] <- p_val
}
#print(t_res["p.value"])
#t_result <- t.test(x1, x2)
#print(t_result)
}
View(col_p)
data.case <- filter(data, status=='Case')
data.control <- filter(data, status=='Control')
#data_cols <- colnames(data)
#class(data.case)
#class(data.case)
col_p <- list()
for (i in c(2:ncol(data))) {
#print(i)
t_res = t.test(data.case[, i], data.control[, i])
p_val = t_res["p.value"][[1]]
if (p_val <= 0.05) {
col_p[[colnames(data)[i]]] <- p_val
}
#print(t_res["p.value"])
#t_result <- t.test(x1, x2)
#print(t_result)
}
View(col_p)
data.case <- filter(data, status=='Case')
data.control <- filter(data, status=='Control')
#data_cols <- colnames(data)
#class(data.case)
#class(data.case)
col_p <- list()
for (i in c(2:ncol(data))) {
#print(i)
t_res = t.test(data.case[, i], data.control[, i])
p_val = t_res["p.value"][[1]]
if (p_val <= 0.05) {
col_p[[colnames(data)[i]]] <- p_val
}
}
col_p
data.case <- filter(data, status=='Case')
data.control <- filter(data, status=='Control')
#data_cols <- colnames(data)
#class(data.case)
#class(data.case)
col_p <- list()
for (i in c(2:ncol(data))) {
#print(i)
t_res = t.test(data.case[, i], data.control[, i])
p_val = t_res["p.value"][[1]]
if (p_val <= 0.05) {
col_p[[colnames(data)[i]]] <- p_val
}
}
sort(col_p)
data.case <- filter(data, status=='Case')
data.control <- filter(data, status=='Control')
#data_cols <- colnames(data)
#class(data.case)
#class(data.case)
col_p <- list()
for (i in c(2:ncol(data))) {
#print(i)
t_res = t.test(data.case[, i], data.control[, i])
p_val = t_res["p.value"][[1]]
if (p_val <= 0.05) {
col_p[[colnames(data)[i]]] <- p_val
}
}
sort.list(col_p)
data.case <- filter(data, status=='Case')
data.control <- filter(data, status=='Control')
#data_cols <- colnames(data)
#class(data.case)
#class(data.case)
col_p <- list()
for (i in c(2:ncol(data))) {
#print(i)
t_res = t.test(data.case[, i], data.control[, i])
p_val = t_res["p.value"][[1]]
if (p_val <= 0.05) {
col_p[[colnames(data)[i]]] <- p_val
}
}
class(col_p)
#sort.list(col_p)
data.case <- filter(data, status=='Case')
data.control <- filter(data, status=='Control')
#data_cols <- colnames(data)
#class(data.case)
#class(data.case)
col_p <- list()
for (i in c(2:ncol(data))) {
#print(i)
t_res = t.test(data.case[, i], data.control[, i])
p_val = t_res["p.value"][[1]]
if (p_val <= 0.05) {
col_p[[colnames(data)[i]]] <- p_val
}
}
order(col_p)
data.case <- filter(data, status=='Case')
data.control <- filter(data, status=='Control')
#data_cols <- colnames(data)
#class(data.case)
#class(data.case)
col_p <- list()
for (i in c(2:ncol(data))) {
#print(i)
t_res = t.test(data.case[, i], data.control[, i])
p_val = t_res["p.value"][[1]]
if (p_val <= 0.05) {
col_p[[colnames(data)[i]]] <- p_val
}
}
sort(col_p)
data.case <- filter(data, status=='Case')
data.control <- filter(data, status=='Control')
#data_cols <- colnames(data)
#class(data.case)
#class(data.case)
col_p <- list()
for (i in c(2:ncol(data))) {
#print(i)
t_res = t.test(data.case[, i], data.control[, i])
p_val = t_res["p.value"][[1]]
if (p_val <= 0.05) {
col_p[[colnames(data)[i]]] <- p_val
}
}
col_p.sort()
data.case <- filter(data, status=='Case')
data.control <- filter(data, status=='Control')
#data_cols <- colnames(data)
#class(data.case)
#class(data.case)
col_p <- list()
for (i in c(2:ncol(data))) {
#print(i)
t_res = t.test(data.case[, i], data.control[, i])
p_val = t_res["p.value"][[1]]
if (p_val <= 0.05) {
col_p[[colnames(data)[i]]] <- p_val
}
}
sort.list(col_p)
data.case <- filter(data, status=='Case')
data.control <- filter(data, status=='Control')
#data_cols <- colnames(data)
#class(data.case)
#class(data.case)
col_p <- list()
for (i in c(2:ncol(data))) {
#print(i)
t_res = t.test(data.case[, i], data.control[, i])
p_val = t_res["p.value"][[1]]
if (p_val <= 0.05) {
col_p[[colnames(data)[i]]] <- p_val
}
}
sort.list(col_p, decreasing=FALSE)
data.case <- filter(data, status=='Case')
data.control <- filter(data, status=='Control')
#data_cols <- colnames(data)
#class(data.case)
#class(data.case)
col_p <- list()
for (i in c(2:ncol(data))) {
#print(i)
t_res = t.test(data.case[, i], data.control[, i])
p_val = t_res["p.value"][[1]]
if (p_val <= 0.05) {
col_p[colnames(data)[i]] <- p_val
}
}
sort.list(col_p, decreasing=FALSE)
data.case <- filter(data, status=='Case')
data.control <- filter(data, status=='Control')
#data_cols <- colnames(data)
#class(data.case)
#class(data.case)
col_p <- list()
for (i in c(2:ncol(data))) {
#print(i)
t_res = t.test(data.case[, i], data.control[, i])
p_val = t_res["p.value"][[1]]
if (p_val <= 0.05) {
col_p[colnames(data)[i]] <- p_val
}
}
#sort.list(col_p, decreasing=FALSE)
View(col_p)
sort(col_p)
sort(col_p[1])
sort(col_p[[1])
sort(col_p[[1]])
View(col_p)
View(col_p)
sort(col_p[[0]])
sort(col_p[[1]])
View(col_p)
order(col_p)
order(unlist(col_p))
order(-unlist(col_p))
col_p[order(-unlist(col_p))[0]]
order(-unlist(col_p))
View(col_p)
order(unlist(col_p))
col_p[order(unlist(col_p))[0]]
col_p[order(unlist(col_p))[[0]]]
order(unlist(col_p))
order(unlist(col_p))[[1]]
order(unlist(col_p))[[0]]
order(unlist(col_p))[[1]]
col_p[order(unlist(col_p))[[1]]]
lowest_p <- col_p[order(unlist(col_p))[[1]]]
View(lowest_p)
lowest_p <- col_p[order(unlist(col_p))[[1]]][1]
lowest_p <- col_p[order(unlist(col_p))[[1]]][1]
View(lowest_p)
lowest_p <- col_p[order(unlist(col_p))[[1]]][1]
class(lowest_p)
lowest_p <- col_p[order(unlist(col_p))[[1]]][0]
View(lowest_p)
lowest_p <- col_p[order(unlist(col_p))[[1]]][1]
lowest_p <- col_p[order(unlist(col_p))[[1]]][[1]
lowest_p <- col_p[order(unlist(col_p))[[1]]][[1]]
lowest_p <- col_p[order(unlist(col_p))[[1]]][[0]]
lowest_p <- col_p[order(unlist(col_p))[[1]]]
lowest_p <- names(col_p[order(unlist(col_p)))
lowest_p <- col_p[order(unlist(col_p))[[1]]]
lowest_p <- names(col_p[order(unlist(col_p))[[1]]])
lowest_p <- names(col_p[order(unlist(col_p))[[1]]])[1]
lowest_p <- names(col_p[order(unlist(col_p))[[1]]])[1]
boxplot(lowest_p~status)
lowest_p <- names(col_p[order(unlist(col_p))[[1]]])[1]
boxplot(lowest_p~status, data=data)
lowest_p <- names(col_p[order(unlist(col_p))[[1]]])[1]
boxplot(v1~status, data=data)
lowest_p <- names(col_p[order(unlist(col_p))[[1]]])[1]
boxplot(v1~status, data=data, main="V1", xlab="Status", ylab="V1")
lowest_p <- names(col_p[order(unlist(col_p))[[1]]])[1]
boxplot(v1~status, data=data, xlab="Status", ylab="V1")
options(width = 400)
library(dplyr)
library(ggplot2)
data <- read.table(url("https://raw.githubusercontent.com/HimesGroup/BMIN503/master/DataFiles/assignment4_data.txt"), header = TRUE)
options(width = 400)
library(dplyr)
library(ggplot2)
data <- read.table(url("https://raw.githubusercontent.com/HimesGroup/BMIN503/master/DataFiles/assignment4_data.txt"), header = TRUE)
table(data$status)
data.case <- filter(data, status=='Case')
data.control <- filter(data, status=='Control')
col_p <- list()
for (i in c(2:ncol(data))) {
#print(i)
t_res = t.test(data.case[, i], data.control[, i])
p_val = t_res["p.value"][[1]]
if (p_val <= 0.05) {
col_p[colnames(data)[i]] <- p_val
}
}
lowest_p <- names(col_p[order(unlist(col_p))[[1]]])[1]
boxplot(v1~status, data=data, xlab="Status", ylab="V1")
#install.packages("ggdendro")
library(ggdendro)
data.hclust <- hclust(dist(data[,1:ncol(data)]), method="complete")
data.dend <- dendro_data(as.dendrogram(data.hclust))
labels <- label(data.dend)
labels$status <- data$status[as.numeric(levels(labels$label))]
ggplot(segment(data.dend)) +
geom_segment(aes(x=x, y=y, xend=xend, yend=yend)) +
geom_text(data=labels, aes(label=label, x=x, y=0, color=status), size=4)
data.hclust.s <- hclust(dist(data[,1:ncol(data)]), method="single")
data.dend.s <- dendro_data(as.dendrogram(data.hclust.s))
labels <- label(data.dend.s)
labels$status <- data$status[as.numeric(levels(labels$label))]
ggplot(segment(data.dend.s)) +
geom_segment(aes(x=x, y=y, xend=xend, yend=yend)) +
geom_text(data=labels, aes(label=label, x=x, y=0, color=status), size=4)
data.hclust.a <- hclust(dist(data[,1:ncol(data)]), method="average")
data.dend.a <- dendro_data(as.dendrogram(data.hclust.a))
labels <- label(data.dend.a)
labels$status <- data$status[as.numeric(levels(labels$label))]
ggplot(segment(data.dend.a)) +
geom_segment(aes(x=x, y=y, xend=xend, yend=yend)) +
geom_text(data=labels, aes(label=label, x=x, y=0, color=status), size=4)
data.hclust.wd <- hclust(dist(data[,1:ncol(data)]), method="ward.D")
data.dend.wd <- dendro_data(as.dendrogram(data.hclust.wd))
labels <- label(data.dend.wd)
labels$status <- data$status[as.numeric(levels(labels$label))]
ggplot(segment(data.dend.a)) +
geom_segment(aes(x=x, y=y, xend=xend, yend=yend)) +
geom_text(data=labels, aes(label=label, x=x, y=0, color=status), size=4)
data.hclust.cut <- cutree(data.hclust, 2) #Cut where there are 3 clusters
table(data$status, data.hclust.cut)
data.hclust.cut.s <- cutree(data.hclust.s, 2) #Cut where there are 3 clusters
table(data$status, data.hclust.cut.s)
data.hclust.cut.a <- cutree(data.hclust.a, 2) #Cut where there are 3 clusters
table(data$status, data.hclust.cut.a)
#install.packages("ggdendro")
library(ggdendro)
data.hclust <- hclust(dist(data[,1:ncol(data)]), method="complete")
data.dend <- dendro_data(as.dendrogram(data.hclust))
labels <- label(data.dend)
labels$status <- data$status[as.numeric(levels(labels$label))]
ggplot(segment(data.dend)) +
geom_segment(aes(x=x, y=y, xend=xend, yend=yend)) +
geom_text(data=labels, aes(label=label, x=x, y=0, color=status), size=4)
data.hclust.s <- hclust(dist(data[,1:ncol(data)]), method="single")
data.dend.s <- dendro_data(as.dendrogram(data.hclust.s))
labels <- label(data.dend.s)
labels$status <- data$status[as.numeric(levels(labels$label))]
ggplot(segment(data.dend.s)) +
geom_segment(aes(x=x, y=y, xend=xend, yend=yend)) +
geom_text(data=labels, aes(label=label, x=x, y=0, color=status), size=4)
data.hclust.a <- hclust(dist(data[,1:ncol(data)]), method="average")
data.dend.a <- dendro_data(as.dendrogram(data.hclust.a))
labels <- label(data.dend.a)
labels$status <- data$status[as.numeric(levels(labels$label))]
ggplot(segment(data.dend.a)) +
geom_segment(aes(x=x, y=y, xend=xend, yend=yend)) +
geom_text(data=labels, aes(label=label, x=x, y=0, color=status), size=4)
data.hclust.cut <- cutree(data.hclust, 2) #Cut where there are 3 clusters
table(data$status, data.hclust.cut)
data.hclust.cut.s <- cutree(data.hclust.s, 2) #Cut where there are 3 clusters
table(data$status, data.hclust.cut.s)
data.hclust.cut.a <- cutree(data.hclust.a, 2) #Cut where there are 3 clusters
table(data$status, data.hclust.cut.a)
View(data)
