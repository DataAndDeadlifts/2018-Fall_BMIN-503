data = read.csv("NHANES_2007to2008_Assignment-2.csv")
data = read.csv("NHANES_2007to2008_Assignment-2.csv")
data = read.csv("NHANES_2007to2008_Assignment-2.csv")
data = read.csv("NHANES_2007to2008.csv")
print("Number of subjects:")
nrow(data)
print("Columns and data types:")
sapply(data, class)
sapply(data, function(y) sum(length(which(is.na(y)))))
print("Number of males:")
sum(data$RIAGENDR==1)
print("Number of females:")
sum(data$RIAGENDR==2)
table(data$HUQ040)
apply(table(data$HUQ040), 2, function(x) max(x, na.rm = TRUE))
apply(table(data$HUQ040), function(x) max(x, na.rm = TRUE))
apply(table(data$HUQ040), max, function(x) max(x, na.rm = TRUE))
max(table(data$HUQ040))
table(data$HUQ040)
max(table(data$HUQ040))
table(data$HUQ040)
max(table(data$HUQ040))
which.min(apply(data$HUQ040),MARGIN=2,min))
table(data$HUQ040)
max(table(data$HUQ040))
which.min(apply(data$HUQ040),MARGIN=2,min)
table(data$HUQ040)
max(table(data$HUQ040))
which.min(apply(data$HUQ040)min))
table(data$HUQ040)
max(table(data$HUQ040))
which.min(apply(data$HUQ040),min))
huq040_table <- table(data$HUQ040)
max_val <- max(huq040_table)
which(huq040_table==max_val)
huq040_table <- table(data$HUQ040)
max_val <- max(huq040_table)
which(huq040_table==max_val)
huq040_table
huq040_table <- table(data$HUQ040)
max_val <- max(huq040_table)
which(huq040_table==max_val)
print("Adults 18 or older:")
nrow(data[data$RIDAGEYR >= 18, ])
huq040_table <- table(data$HUQ040)
max_val <- max(huq040_table)
#which(huq040_table==max_val)
huq040_table <- table(data$HUQ040)
max_val <- max(huq040_table)
which(huq040_table==max_val)
huq040_table <- table(data$HUQ040)
max_val <- max(huq040_table)
which(huq040_table==max_val)
places_dict = list(1="Clinic",2="Doctor's Office",3="Hospital Emergency Room",4="Hospital outpatient",5="Some other place",7="Refused",9="Don't know")
huq040_table <- table(data$HUQ040)
max_val <- max(huq040_table)
which(huq040_table==max_val)
places_dict <- list(1="Clinic",2="Doctor's Office",3="Hospital Emergency Room",4="Hospital outpatient",5="Some other place",7="Refused",9="Don't know")
huq040_table <- table(data$HUQ040)
max_val <- max(huq040_table)
which(huq040_table==max_val)
places_dict <- c(1="Clinic",2="Doctor's Office",3="Hospital Emergency Room",4="Hospital outpatient",5="Some other place",7="Refused",9="Don't know")
huq040_table <- table(data$HUQ040)
max_val <- max(huq040_table)
which(huq040_table==max_val)
places_dict <- c("Clinic"=1)#,2="Doctor's Office",3="Hospital Emergency Room",4="Hospital outpatient",5="Some other place",7="Refused",9="Don't know")
print("Most common place;")
places_dict[which(hug040_table==max_val)]
huq040_table <- table(data$HUQ040)
max_val <- max(huq040_table)
which(huq040_table==max_val)
places_dict <- c("Clinic"=1)#,2="Doctor's Office",3="Hospital Emergency Room",4="Hospital outpatient",5="Some other place",7="Refused",9="Don't know")
print("Most common place;")
places_dict[which(huq040_table==max_val)]
huq040_table <- table(data$HUQ040)
max_val <- max(huq040_table)
which(huq040_table==max_val)
places_dict <- c("Clinic"=1)#,2="Doctor's Office",3="Hospital Emergency Room",4="Hospital outpatient",5="Some other place",7="Refused",9="Don't know")
print("Most common place;")
places_dict$which(huq040_table==max_val)
places_dict[which(huq040_table==max_val)]
huq040_table <- table(data$HUQ040)
max_val <- max(huq040_table)
which(huq040_table==max_val)
places_dict <- c("Clinic"=1)#,2="Doctor's Office",3="Hospital Emergency Room",4="Hospital outpatient",5="Some other place",7="Refused",9="Don't know")
print("Most common place;")
places_dict[which(huq040_table==max_val)]
huq040_table <- table(data$HUQ040)
max_val <- max(huq040_table)
which(huq040_table==max_val)
places_dict <- c("Clinic"=1,"Doctor's Office"=2,"Hospital Emergency Room"=3,"Hospital outpatient"=4,"Some other place"=5,"Refused"=7,"Don't Know"=9,)
huq040_table <- table(data$HUQ040)
max_val <- max(huq040_table)
which(huq040_table==max_val)
places_dict <- c("Clinic"=1,"Doctor's Office"=2,"Hospital Emergency Room"=3,"Hospital outpatient"=4,"Some other place"=5,"Refused"=7,"Don't Know"=9)
print("Most common place;")
places_dict[which(huq040_table==max_val)]
huq040_table <- table(data$HUQ040)
max_val <- max(huq040_table)
which(huq040_table==max_val)
places_dict <- c("Clinic"=1,"Doctor's Office"=2,"Hospital Emergency Room"=3,"Hospital outpatient"=4,"Some other place"=5,"Refused"=7,"Don't Know"=9)
print("Most common place;")
places_dict[which(huq040_table==max_val)]
huq040_table <- table(data$HUQ040)
max_val <- max(huq040_table)
places_dict <- c("Clinic"=1,"Doctor's Office"=2,"Hospital Emergency Room"=3,"Hospital outpatient"=4,"Some other place"=5,"Refused"=7,"Don't Know"=9)
print("Most common place;")
places_dict[which(huq040_table==max_val)]
col1 <- c(1:40)
col2 <- c(1:80)
col2 <- col2[lapply(col2, "%%", 2) == 0]
col3 <- rep(0, each=40)
col4 <- col1 * col2
m <- matrix(c(col1,col2,col3,col4),ncol=4)
head(m)
col5 <- rep(c('a','b'),20)
m <- cbind(m, col5)
head(m)
m2 <- data.frame(m)
colnames(m2) <- c("Index","EvenNums","Zeroes","V4","AB")
sapply(m2, class)
m2 <- transform(
m2, Index = as.numeric(Index),
EvenNums = as.numeric(EvenNums),
Zeroes = as.numeric(Zeroes),
V4 = as.numeric(V4)
)
sapply(m2, class)
m2 <- data.frame(m)
colnames(m2) <- c("Index","EvenNums","Zeroes","V4","AB")
sapply(m2, class)
m2 <- transform(
m2, Index = as.numeric(Index),
EvenNums = as.numeric(EvenNums),
Zeroes = as.numeric(Zeroes),
V4 = as.numeric(V4)
)
sapply(m2, class)
head(m2)
m2 <- data.frame(m)
colnames(m2) <- c("Index","EvenNums","Zeroes","V4","AB")
sapply(m2, class)
m2 <- transform(
m2, Index = as.numeric(as.character(Index)),
EvenNums = as.numeric(as.character(EvenNums)),
Zeroes = as.numeric(as.character(Zeroes)),
V4 = as.numeric(as.character(V4))
)
sapply(m2, class)
head(m2)
m2 <- data.frame(m)
colnames(m2) <- c("Index","EvenNums","Zeroes","V4","AB")
sapply(m2, class)
m2 <- transform(
m2, Index = as.numeric(Index),
EvenNums = as.numeric(EvenNums),
Zeroes = as.numeric(Zeroes),
V4 = as.numeric(V4)
)
m3 <- transform(
m2, Index = as.numeric(as.character(Index)),
EvenNums = as.numeric(as.character(EvenNums)),
Zeroes = as.numeric(as.character(Zeroes)),
V4 = as.numeric(as.character(V4))
)
sapply(m2, class)
head(m2)
head(m3)
m2 <- data.frame(m)
colnames(m2) <- c("Index","EvenNums","Zeroes","V4","AB")
sapply(m2, class)
m2 <- transform(
m2, Index = as.numeric(Index),
EvenNums = as.numeric(EvenNums),
Zeroes = as.numeric(Zeroes),
V4 = as.numeric(V4)
)
m3 <- transform(
m3, Index = as.numeric(as.character(Index)),
EvenNums = as.numeric(as.character(EvenNums)),
Zeroes = as.numeric(as.character(Zeroes)),
V4 = as.numeric(as.character(V4))
)
sapply(m2, class)
head(m2)
head(m3)
m2 <- data.frame(m)
colnames(m2) <- c("Index","EvenNums","Zeroes","V4","AB")
sapply(m2, class)
m2 <- transform(
m2, Index = as.numeric(Index),
EvenNums = as.numeric(EvenNums),
Zeroes = as.numeric(Zeroes),
V4 = as.numeric(V4)
)
#m3 <- transform(
#  m3, Index = as.numeric(as.character(Index)),
#  EvenNums = as.numeric(as.character(EvenNums)),
#  Zeroes = as.numeric(as.character(Zeroes)),
#  V4 = as.numeric(as.character(V4))
#)
sapply(m2, class)
head(m2)
#head(m3)
m2 <- data.frame(m)
colnames(m2) <- c("Index","EvenNums","Zeroes","V4","AB")
sapply(m2, class)
m2 <- transform(
m2, Index = as.numeric(Index),
EvenNums = as.numeric(EvenNums),
Zeroes = as.numeric(Zeroes),
V4 = as.numeric(V4)
)
m3 <- transform(
m3, Index = as.numeric(as.character(Index)),
EvenNums = as.numeric(as.character(EvenNums)),
Zeroes = as.numeric(as.character(Zeroes)),
V4 = as.numeric(as.character(V4))
)
sapply(m2, class)
head(m2)
head(m3)
head(m)
col5 <- rep(c('a','b'),20)
m <- cbind(m, col5)
head(m)
col1 <- c(1:40)
col2 <- c(1:80)
col2 <- col2[lapply(col2, "%%", 2) == 0]
col3 <- rep(0, each=40)
col4 <- col1 * col2
m <- matrix(c(col1,col2,col3,col4),ncol=4)
col1 <- c(1:40)
col2 <- c(1:80)
col2 <- col2[lapply(col2, "%%", 2) == 0]
col3 <- rep(0, each=40)
col4 <- col1 * col2
m <- matrix(c(col1,col2,col3,col4),ncol=4)
head(m)
col5 <- rep(c('a','b'),20)
m <- cbind(m, col5)
head(m)
m2 <- data.frame(m)
colnames(m2) <- c("Index","EvenNums","Zeroes","V4","AB")
sapply(m2, class)
m2 <- transform(
m2, Index = as.numeric(Index),
EvenNums = as.numeric(EvenNums),
Zeroes = as.numeric(Zeroes),
V4 = as.numeric(V4)
)
m3 <- transform(
m3, Index = as.numeric(as.character(Index)),
EvenNums = as.numeric(as.character(EvenNums)),
Zeroes = as.numeric(as.character(Zeroes)),
V4 = as.numeric(as.character(V4))
)
sapply(m2, class)
head(m2)
head(m3)
m2 <- data.frame(m)
colnames(m2) <- c("Index","EvenNums","Zeroes","V4","AB")
sapply(m2, class)
m2 <- transform(
m2, Index = as.numeric(Index),
EvenNums = as.numeric(EvenNums),
Zeroes = as.numeric(Zeroes),
V4 = as.numeric(V4)
)
head(m2)
m2 <- transform(
m2, Index = as.numeric(as.character(Index)),
EvenNums = as.numeric(as.character(EvenNums)),
Zeroes = as.numeric(as.character(Zeroes)),
V4 = as.numeric(as.character(V4))
)
sapply(m2, class)
head(m2)
col1 <- c(1:40)
col2 <- c(1:80)
col2 <- col2[lapply(col2, "%%", 2) == 0]
col3 <- rep(0, each=40)
col4 <- col1 * col2
m <- matrix(c(col1,col2,col3,col4),ncol=4)
head(m)
col5 <- rep(c('a','b'),20)
m <- cbind(m, col5)
head(m)
m2 <- data.frame(m)
colnames(m2) <- c("Index","EvenNums","Zeroes","V4","AB")
sapply(m2, class)
m2 <- transform(
m2, Index = as.numeric(Index),
EvenNums = as.numeric(EvenNums),
Zeroes = as.numeric(Zeroes),
V4 = as.numeric(V4)
)
head(m2)
m2 <- transform(
m2, Index = as.numeric(as.character(Index)),
EvenNums = as.numeric(as.character(EvenNums)),
Zeroes = as.numeric(as.character(Zeroes)),
V4 = as.numeric(as.character(V4))
)
sapply(m2, class)
head(m2)
m2 <- data.frame(m)
colnames(m2) <- c("Index","EvenNums","Zeroes","V4","AB")
sapply(m2, class)
#m2 <- transform(
#  m2, Index = as.numeric(Index),
#  EvenNums = as.numeric(EvenNums),
#  Zeroes = as.numeric(Zeroes),
#  V4 = as.numeric(V4)
#)
#head(m2)
m2 <- transform(
m2, Index = as.numeric(as.character(Index)),
EvenNums = as.numeric(as.character(EvenNums)),
Zeroes = as.numeric(as.character(Zeroes)),
V4 = as.numeric(as.character(V4))
)
sapply(m2, class)
head(m2)
m2 <- data.frame(m)
colnames(m2) <- c("Index","EvenNums","Zeroes","V4","AB")
sapply(m2, class)
m2 <- transform(
m2, Index = as.numeric(as.character(Index)),
EvenNums = as.numeric(as.character(EvenNums)),
Zeroes = as.numeric(as.character(Zeroes)),
V4 = as.numeric(as.character(V4))
)
sapply(m2, class)
head(m2)
L <- list()
L_names <- list()
for (i in c(1:nrow(m2))) {
L[[i]] <- list(m2[i,"EvenNums",],m2[i,"AB"])
L_names[i] <- as.character(i)
}
names(L) <- L_names
print("30th element")
L[[30]]
print("Second element of the 30th element with brackets")
L[[30]][2]
print("Second element of the 30th element with '$'")
L$"30"[2]
my.f <- function(x) {
if (!(typeof(x) %in% c("integer"))) {
print("Input not integer!")
} else {
if (x %% 2 == 0) {
return(x)
} else {
return(x*2)
}
}
}
my.f(2)
my.f(3)
my.f(3L)
my.f(6L)
my.f("two")
data <- read.csv("`/Data/CASP.csv")
data <- read.csv("~/Data/CASP.csv")
setwd("~/GitHub/2018-Fall_BMIN-503/Final_Project/Data")
data <- read.csv("~/CASP.csv")
data <- read.csv("CASP.csv")
View(data)
View(data)
data <- read.csv("CASP.csv")
rename(data,
residueSize = RMSD,
totalSurfaceArea = F1,
nonPolarExposedArea = F2,
fracAreaExposedNonPolarResidue = F3,
fracAreaExposedNonPolarPartofResidue = F4,
molecularMassWeightedExposedArea = F5,
avgDeviationStandardExposedAreaofResidue = F6,
euclidianDistance = F7,
secondaryStructurePenalty = F8,
spacialDistConstraintsNKVal = F9
)
data <- read.csv("CASP.csv")
dplyr.rename(data,
residueSize = RMSD,
totalSurfaceArea = F1,
nonPolarExposedArea = F2,
fracAreaExposedNonPolarResidue = F3,
fracAreaExposedNonPolarPartofResidue = F4,
molecularMassWeightedExposedArea = F5,
avgDeviationStandardExposedAreaofResidue = F6,
euclidianDistance = F7,
secondaryStructurePenalty = F8,
spacialDistConstraintsNKVal = F9
)
library("dplyr")
data <- read.csv("CASP.csv")
rename(data,
residueSize = RMSD,
totalSurfaceArea = F1,
nonPolarExposedArea = F2,
fracAreaExposedNonPolarResidue = F3,
fracAreaExposedNonPolarPartofResidue = F4,
molecularMassWeightedExposedArea = F5,
avgDeviationStandardExposedAreaofResidue = F6,
euclidianDistance = F7,
secondaryStructurePenalty = F8,
spacialDistConstraintsNKVal = F9
)
View(data)
library("dplyr")
data <- read.csv("CASP.csv")
data <- rename(data,
residueSize = RMSD,
totalSurfaceArea = F1,
nonPolarExposedArea = F2,
fracAreaExposedNonPolarResidue = F3,
fracAreaExposedNonPolarPartofResidue = F4,
molecularMassWeightedExposedArea = F5,
avgDeviationStandardExposedAreaofResidue = F6,
euclidianDistance = F7,
secondaryStructurePenalty = F8,
spacialDistConstraintsNKVal = F9
)
View(data)
# Get unique tailnums in June, July flights
unique_tails <- distinct(filter(flights, month==6|month==7)['tailnum'])
#install.packages("nycflights13")
#install.packages("dplyr")
#install.packages("ggplot2")
library("dplyr")
library("ggplot2")
# NYC airports include JFK, EWR and LGA
flights <- nycflights13::flights
install.packages("nycflights13")
install.packages("dplyr")
install.packages("ggplot2")
library("dplyr")
library("ggplot2")
install.packages("dplyr")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("nycflights13")
install.packages("dplyr")
install.packages("ggplot2")
library("dplyr")
library("ggplot2")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
#install.packages("nycflights13")
#install.packages("dplyr")
#install.packages("ggplot2")
library("dplyr")
#install.packages("nycflights13")
install.packages("dplyr")
#install.packages("ggplot2")
library("dplyr")
install.packages("dplyr")
#install.packages("nycflights13")
#install.packages("dplyr")
#install.packages("ggplot2")
library("dplyr")
#install.packages("nycflights13")
#install.packages("dplyr")
#install.packages("ggplot2")
library("dplyr")
#install.packages("nycflights13")
install.packages("dplyr")
#install.packages("ggplot2")
library("dplyr")
install.packages("dplyr")
#install.packages("nycflights13")
#install.packages("dplyr")
#install.packages("ggplot2")
library("dplyr")
library("ggplot2")
# NYC airports include JFK, EWR and LGA
flights <- nycflights13::flights
# Num carriers departed NYC in 2013
n_carriers = nrow(distinct(flights['carrier']))
print("Num carriers that departed NYC in 2013;")
print(n_carriers)
# Are there any origins beside NYC?
distinct(flights['origin'])
# Looks like there isn't, no need to filter then!
carrier_flight_count <- table(flights$carrier)
max_carrier <- names(which(carrier_flight_count==max(carrier_flight_count)))
print("Carrier with most flights")
print(max_carrier)
# Get unique tailnums in June, July flights
unique_tails <- distinct(filter(flights, month==6|month==7)['tailnum'])
# Get tails that contain M or P
m_or_p_tails <- filter(unique_tails,grepl("M",tailnum)|grepl("P",tailnum))
print("Number of tailnums from flights in june and july that contain the letter M or P.")
print(nrow(m_or_p_tails))
pop_dest_by_month <- summarize(group_by(flights,month,dest),count =n()) %>%
filter(count==max(count))
count_carrier_delay <- summarize(group_by(flights,carrier),count =n(), mean_dep_delay=mean(dep_delay, na.rm=T))
ggplot(count_carrier_delay, aes(x=count, y=mean_dep_delay)) +
geom_point(size=2) +
geom_smooth(method="loess",se=TRUE,fullrange=FALSE, level=0.95) +
geom_text(label=count_carrier_delay$carrier, nudge_x=1500)
time_of_day_delay <- summarize(group_by(flights,sched_dep_time), mean_dep_delay=mean(dep_delay, na.rm=T))
ggplot(time_of_day_delay, aes(x=sched_dep_time, y=mean_dep_delay)) +
geom_point(size=2) +
geom_smooth(method="auto",se=TRUE,fullrange=FALSE, level=0.95)
